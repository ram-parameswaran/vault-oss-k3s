packages:
  - jq
  - gpg
  - tree
  - unzip

runcmd:
  - curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=v1.24.7+k3s1 sh -
  - mkdir -p /home/ubuntu/.kube/
  - cp /etc/rancher/k3s/k3s.yaml /home/ubuntu/.kube/config
  - chown ubuntu:ubuntu /home/ubuntu/.kube/config
  - k3s completion bash > /etc/bash_completion.d/k3s
  - echo "export KUBECONFIG=/home/ubuntu/.kube/config" | tee -a /home/ubuntu/.bashrc
  - echo "alias k=\'kubectl\'" | tee -a /home/ubuntu/.bashrc
  - wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
  - echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
  - sudo apt update && sudo apt install vault

  - curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
  - helm completion bash > /etc/bash_completion.d/helm
  - runuser -l ubuntu -c "helm repo add hashicorp https://helm.releases.hashicorp.com"

  - kubectl completion bash > /etc/bash_completion.d/kubectl
  - curl -sL "https://releases.hashicorp.com/vault-k8s/1.1.0/vault-k8s_1.1.0_linux_$( [ $(uname -m) = aarch64 ] && echo arm64 || echo amd64).zip" | zcat > /usr/local/bin/vault-k8s
  - chmod +x /usr/local/bin/vault-k8s

write_files:
- path: /home/ubuntu/vault-overrides.sh
  content: |
    #!/bin/bash
    touch vault-overrides.yaml
    tee vault-overrides.yaml << EOF
    injector:
      enabled: "false"
    server:
      image:
        repository: hashicorp/vault
        tag: 1.13.1
      logLevel: "trace"
      affinity: ""
      ha:
        enabled: true
        replicas: 1
        apiAddr: null
        clusterAddr: "https://PLACEHOLDER_ADDRESS:8201"
        raft:
          enabled: true
          setNodeId: true
    ui:
      enabled: true
      publishNotReadyAddresses: true
      activeVaultPodOnly: false
      serviceType: "LoadBalancer"
      serviceNodePort: null
      externalPort: 8200
      targetPort: 8200

    fullnameOverride: PLACEHOLDER_VALUE

    EOF
  owner: 'ubuntu:ubuntu'
  permissions: '0666'
  defer: true
- path: /home/ubuntu/install-vault.sh
  content: |
    #!/bin/bash
    ~/vault-overrides.sh
    export PLACEHOLDER_VALUE="my-value"
    export PLACEHOLDER_ADDRESS="my-address"
    IP_ADDR=$(ip a | grep enp0s1 | awk -v RS='([0-9]+\\.){3}[0-9]+' 'RT{print RT}' | head -n 1)
    read -p "Enter Vault pod name: " VAULT_NAME

    sed -i "s/PLACEHOLDER_VALUE/${VAULT_NAME}/g" vault-overrides.yaml
    sed -i "s/PLACEHOLDER_ADDRESS/${IP_ADDR}/g" vault-overrides.yaml

    printf "%s\n" "-------------------------------------------------------------------"
    sleep 2
    helm install $VAULT_NAME hashicorp/vault --values vault-overrides.yaml --debug
    printf "%s\n" "-------------------------------------------------------------------"
    sleep 3
    MY_POD=$(kubectl get pods | grep -m1 "${VAULT_NAME}" | awk '{printf $1}')
    read -p "THE VAULT NAME IS BEING PARSED AS ${MY_POD} ------ CONTINUE?"
    echo $MY_POD
    until [[ $VAULT_POD_STATE == "Running" ]]
    do
        VAULT_POD_STATE=$(kubectl get pod $MY_POD | awk 'FNR==2{printf $3}')
        printf "\nPod is currently: $VAULT_POD_STATE\n"
        sleep 2
    done
    printf "%s\n" "-------------------------------------------------------------------"
    printf "Vault is ready, proceeding to unseal and init!\n"
    printf "%s\n" "-------------------------------------------------------------------"
    kubectl exec $MY_POD -- vault operator init -key-shares=1 -key-threshold=1 -format=json > cluster-keys.json
    VAULT_UNSEAL_KEY=$(jq -r ".unseal_keys_b64[]" cluster-keys.json)
    kubectl exec $MY_POD -- vault operator unseal $VAULT_UNSEAL_KEY
    export VAULT_ADDR=http://127.0.0.1:8200
    export VAULT_TOKEN=$(jq -r ".root_token" cluster-keys.json)
    printf "%s\n" "-------------------------------------------------------------------"
    printf "Validating Vault status & root token lookup\n"
    printf "%s\n" "-------------------------------------------------------------------"
    vault status && printf "%s\n" "-------------------------------------------------------------------" && vault token lookup
    echo "export VAULT_ADDR=http://127.0.0.1:8200" >> ~/.bashrc
    echo "export VAULT_TOKEN=$(jq -r ".root_token" cluster-keys.json)" >> ~/.bashrc
    printf "\n%s\n\n" "Remember to source your .bashrc"
  owner: 'ubuntu:ubuntu'
  permissions: '0755'
  defer: true
